// mixin for transition of all style properties
@mixin transition($duration: var(--app-default-transition-duration)) {
  transition: all $duration ease-in-out;
  -webkit-transition: all $duration ease-in-out;
  -moz-transition: all $duration ease-in-out;
  -o-transition: all $duration ease-in-out;
}

@mixin no-transition() {
  transition: none;
  -webkit-transition: none;
  -moz-transition: none;
  -o-transition: none;
}

// mixin for transition of selected style properties
@mixin property-transition($duration, $property) {
  transition: $property $duration ease-in-out;
  -webkit-transition: $property $duration ease-in-out;
  -moz-transition: $property $duration ease-in-out;
  -o-transition: $property $duration ease-in-out;
}

@mixin border-radius($radius: 2px) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
}

// shadow to be applied to apps main panels
@mixin panel-shadow() {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.2);
}

@mixin box-shadow(
  $horizontalLength: 0,
  $verticalLength: 1px,
  $blurRadius: 0,
  $spread: 0,
  $color: $color-primary-3
) {
  box-shadow: $horizontalLength $verticalLength $blurRadius $spread $color;
  -webkit-box-shadow: $horizontalLength $verticalLength $blurRadius $spread
    $color;
}

@mixin linear-gradient($from, $to) {
  background: $from;
  background: -moz-linear-gradient(left, $from 0%, $to 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(
    left,
    $from 0%,
    $to 100%
  ); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(
    to right,
    $from 0%,
    $to 100%
  ); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

@mixin placeholder($color) {
  input:-moz-placeholder {
    color: $color;
  }
  ::-webkit-input-placeholder {
    color: $color;
  }
  ::-moz-placeholder {
    color: $color;
  }
  /* firefox 19+ */
  :-ms-input-placeholder {
    color: $color;
  }
  /* ie */
}

// prevent text selection by the user (useful for avoiding selection flicker on double click)
@mixin prevent-text-selection {
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  cursor: default;
}

// media query mixins
// https://davidwalsh.name/write-media-queries-sass
$phone-width: 480px;
$tablet-width: 800px;
$desktop-width: 1024px;

@mixin phone {
  @media (min-width: #{$phone-width}) and (max-width: #{$phone-width - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{$tablet-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin media($min: 0px, $max: 0px) {
  @if $min > 0 and $max > 0 {
    @media (min-width: #{$min}) and (max-width: #{$max}) {
      @content;
    }
  } @else if $min > 0 and $max == 0 {
    @media (min-width: #{$min}) {
      @content;
    }
  } @else if $max > 0 and $min == 0 {
    @media (max-width: #{$max}) {
      @content;
    }
  }
}

@mixin full-size($top: 0) {
  position: absolute;
  left: 0;
  top: $top;
  right: 0;
  bottom: 0;
}

@mixin flex-row($flex: 1) {
  display: flex;
  flex: $flex;
  flex-direction: row;
  min-height: 0; //support for overflow: auto (IE)
  min-width: 0; //support for ellipsis
}

@mixin flex-col($flex: 1) {
  display: flex;
  flex: $flex;
  flex-direction: column;
  min-height: 0; //support for overflow: auto (IE)
  min-width: 0; //support for ellipsis
}

@mixin fade-in($duration: var(--app-default-transition-duration)) {
  -webkit-animation: eoFadeIn $duration;
  animation: eoFadeIn $duration;
}

@mixin ellipsis($max-width: none) {
  display: inline-block;
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin frame($size: var(--app-pane-padding)) {
  position: absolute;
  left: $size;
  right: $size;
  top: $size;
  bottom: $size;
}

/* mixin definition ; sets margin/gap for all child elements */
@mixin gap($gap: var(--app-pane-padding), $margin: 0px) {
  margin: $margin calc(#{$gap} / -2 + #{$margin});
  & > * {
    margin-left: calc(#{$gap} / 2);
    margin-right: calc(#{$gap} / 2);
  }
}

/* mixin definition ; sets LTR and RTL within the same style call */
@mixin flip-style($prop, $value, $inverse-prop, $inverse-value: none) {
  [dir='ltr'] & {
    #{$prop}: $value;
    @if $inverse-value != none and $inverse-prop != $prop {
      #{$inverse-prop}: $inverse-value;
    }
  }

  [dir='rtl'] & {
    @if $inverse-prop != $prop {
      #{$inverse-prop}: $value;
    }
    @if $inverse-value != none {
      #{$prop}: $inverse-value;
    }
  }
}

/* mixin definition ; sets LTR and RTL within the same style call */
@mixin bidi-style($prop, $value, $inverse-prop, $default-value) {
  #{$prop}: $value;

  [dir='rtl'] & {
    #{$inverse-prop}: $value;
    #{$prop}: $default-value;
  }
}

@mixin shades-of-gray($alpa) {
  background-color: rgba(0, 0, 0, $alpa);
}
:host {
  display: block;
  background: #fff;

  .yuv-object-form {
    .core {
      padding: var(--app-pane-padding) var(--app-pane-padding) calc(var(--app-pane-padding) * 2) var(--app-pane-padding);
    }
    .ui-tabview {
      padding: 0;
    }
  }
}

//noinspection CssInvalidPseudoSelector
:host::ng-deep {
  .yuv-object-form > .data > eo-form-group > .form-element.o2mGroupStack {
    background: transparent;
    border: 0;

    & > eo-form-group > .o2mGroup {
      background-color: var(--panel-background-lightgrey);
      border-top: 1px solid rgba(var(--color-black-rgb), 0.1);
      padding: var(--app-pane-padding);
    }

    & > p-tabview > .ui-tabview > .ui-tabview-panels {
      background-color: var(--panel-background-lightgrey);
    }
  }
}
:host {
  flex: 1 1 auto;
  //noinspection CssInvalidPseudoSelector
  &.label-toggled::ng-deep {
    eo-form-input label {
      text-decoration: line-through;
    }
  }
}

.form-element {
  box-sizing: border-box;

  .form-field {
    margin: calc(var(--app-pane-padding) / 4) calc(var(--app-pane-padding) / 2);

    .description {
      border: 0;
      font-size: var(--font-hint);
      font-style: italic;
      padding: calc(var(--app-pane-padding) / 8) calc(var(--app-pane-padding) / 8) 0 calc(var(--app-pane-padding) / 8);
    }

    .err-msg {
      color: var(--color-error);
      padding: calc(var(--app-pane-padding) / 4) 0;
      border: 0;
    }

    .table {
      flex-flow: column;
      align-items: flex-start;
      border-color: transparent;

      .label {
        padding-bottom: calc(var(--app-pane-padding) / 4);
      }
    }
  }

  // dirty styles
  &.ng-dirty:not(.ng-invalid) {
    //noinspection CssInvalidPseudoSelector
    > .form-field:not(.focused)::ng-deep {
      label {
        background-color: var(--color-dirty-background);
        color: var(--color-dirty-font) !important;
      }
    }
  }
}


.date-picker {
  background: var(--color-white);
  @include flex-col();
  box-sizing: border-box;

  .controls {
    @include flex-col(none);

    button {
      padding: 4px;
      margin: 4px;
      border-radius: 2px;

      &.icon {
        background: rgba(var(--color-black-rgb), 0);
        color: var(--color-white);
        padding: 0;

        &:focus {
          border-color: rgba(var(--color-black-rgb), 0);
        }

        eo-icon {
          border-radius: 2px;
          @include transition();
          background: rgba(var(--color-white-rgb), 0.1);

          svg {
            fill: var(--text-color-hint);
          }
        }

        &:first-child {
          transform: rotate(180deg);
        }
      }
    }
  }

  .select {
    flex: 0 0 auto;
    background: var(--color-accent);
    color: var(--color-white);

    .year {
      padding: 0 var(--app-pane-padding);
      margin-bottom: var(--app-pane-padding);
      @include flex-row(none);
      flex-wrap: nowrap;
      justify-content: flex-end;
      align-items: center;

      .back {
        @include flex-col();
        align-items: flex-start;

        .d {
          font-size: 40px;
          line-height: 1em;
          margin: 0 4px;
        }

        .current {
          border-radius: 2px;
          padding: 0 4px 0 0;
          @include flex-row(none);
          align-items: center;
          cursor: pointer;
          @include transition();

          &:hover {
            background: rgba(var(--color-white-rgb), 0.1);
          }

          > div {
            @include flex-col(none);
            align-items: flex-start;
          }
        }
      }

      input {
        font-size: 50px;
        font-family: eoRoboto, sans-serif;
        font-weight: var(--font-weight-light);
        color: var(--color-white);
        border: 0;
        background: rgba(var(--color-black-rgb), 0);
        width: 3em;
        text-align: right;
        line-height: 1em;
        margin: 0 calc(var(--app-pane-padding) / 2);
        border-bottom: 1px solid rgba(var(--color-black-rgb), 0);

        &::selection {
          background: rgba(var(--color-white-rgb), 0.3);
        }

        &:focus {
          border-bottom: 1px solid rgba(var(--color-white-rgb), 0.5);
        }
      }
    }

    .month {
      padding: 0 var(--app-pane-padding);

      span {
        font-size: var(--font-hint);
        color: rgba(var(--color-white-rgb), 0.5);
        font-weight: var(--font-weight-bold);
        display: inline-block;
        @include transition();
        width: 3em;
        box-sizing: border-box;
        text-align: center;
        padding: 4px 0;
        margin-bottom: 1px;
        cursor: pointer;
        border-bottom: 2px solid rgba(var(--color-black-rgb), 0);

        &:hover {
          color: var(--color-white);
          border-color: rgba(var(--color-white-rgb), 0.5);
        }

        &.current {
          color: var(--color-white);
          border-color: var(--color-white);
        }
      }
    }
  }

  .calendar {
    flex: 1 1 auto;
    padding: var(--app-pane-padding);
    box-sizing: content-box;
  }

  .time {
    @include flex-row(none);
    justify-content: flex-start;
    align-items: center;
    padding: var(--app-pane-padding);

    .value {
      font-size: 64px;
      font-weight: var(--font-weight-light);
      color: var(--text-color-caption);
      line-height: 1em;
      cursor: default;

      &.val-h,
      &.val-min {
        min-width: 1.2em;
      }
    }

    .controls {
      button.icon {
        &:focus {
          border: 1px solid var(--color-primary-3);
        }
        eo-icon {
          background: rgba(var(--color-black-rgb), 0.05);
          color: var(--text-color-hint);

          &:hover {
            background: rgba(var(--color-black-rgb), 0.1);
            color: var(--text-color-caption);
          }
        }
      }
    }
  }

  .actions {
    @include flex-row(none);
    justify-content: flex-end;
    padding: var(--app-pane-padding);
  }
}

.week.names span:hover {
  background: rgba(var(--color-black-rgb), 0);
  border-color: rgba(var(--color-black-rgb), 0);

  cursor: default;
}

.week {
  @include flex-row(none);
  flex-wrap: nowrap;
  justify-content: space-around;
  margin-bottom: 3px;

  > div {
    text-align: center;
    width: 2.5em;
  }

  span {
    color: var(--text-color-body);
    display: inline-block;
    box-sizing: border-box;
    border-bottom: 1px solid rgba(var(--color-black-rgb), 0);
    @include transition(var(--app-default-transition-duration));
    width: 2em;
    text-align: center;
    padding: 0.25em 0;
    cursor: pointer;
  }

  .day.disabled {
    color: white;
    cursor: default;
    @include shades-of-gray(0.1);
    border-radius: 2px;

    &:hover {
      border-bottom: 0;
    }
  }

  span:hover {
    color: var(--color-accent);
    border-bottom: 1px solid var(--color-accent);
  }

  span.today {
    color: var(--color-accent);
    font-weight: var(--font-weight-bold);
    border-bottom: 1px solid var(--color-accent);
  }

  span.selected,
  span.selected:hover {
    background: var(--color-accent);
    color: var(--color-white) !important;
    @include border-radius(2px);
  }

  span.different-month {
    color: var(--text-color-hint);
  }
}

.week.names {
  span {
    //text-transform: uppercase;
    color: var(--color-accent);
  }
}
:host {
  flex: 1 1 auto;
}

.form-element {
  box-sizing: border-box;

  &.o2mGroupStack {
    background: rgba(var(--color-black-rgb), 0.02);
    border: 1px solid rgba(var(--color-black-rgb), 0.1);

    // tab headers
    .ui-tabview.ui-tabview-top > .ui-tabview-nav li.ui-state-active {
      border-color: rgba(var(--color-black-rgb), 0.26);
    }
    .ui-tabview.ui-tabview-top > .ui-tabview-nav > li:not(.ui-state-active):not(.ui-state-disabled):hover {
      border-color: rgba(var(--color-black-rgb), 0.16);
    }
    .ui-tabview.ui-tabview-top > .ui-tabview-nav li {
      &.dirty-true:not(.invalid-true) {
        a .ui-tabview-title {
          background-color: var(--color-dirty-background);
          color: var(--color-dirty-font);
        }
      }
      &.invalid-true {
        a .ui-tabview-title {
          background-color: var(--color-error);
          color: var(--color-white);

          &:after {
            content: '!';
            margin-left: calc(var(--app-pane-padding) / 2);
          }
        }
      }
    }

    p-tabview {
      width: 100%;
    }

    &.data {
      border: 0;
    }
  }

  &.align-column {
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-content: stretch;
    align-items: stretch;

    //.form-element-wrap {
    > * {
      flex: 1 1 auto;
    }
  }

  &.align-row {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    align-content: flex-start;
    align-items: flex-start;

    > * {
      flex: 1 0 200px;
      max-width: 100%;
    }

    > .fieldset > :not(.legend) {
      display: flex;
      flex-flow: row wrap;
      justify-content: flex-start;
      align-content: flex-start;
      align-items: flex-start;
    }
  }

  .stackBase {
    padding: var(--app-pane-padding);
    // background: var(--panel-background-lightgrey);

    > eo-form-group > .form-element > .fieldset {
      margin: 0;
      padding: 0;
      border: 0;
      background-color: transparent;

      > .legend {
        display: none;
      }
    }
  }
}


body > .ui-dialog:not(.ui-helper-hidden),
p-dialog .ui-dialog:not(.ui-helper-hidden) {
  @include transition();
  &:not(.active) {
    transform: perspective(600px) rotateY(10deg) translate3d(-100px, -100px, -100px);
    .yuv-dialog-header {
      background-color: var(--color-primary);
    }
  }
}

body > .ui-dialog.ui-widget,
p-dialog .ui-dialog.ui-widget {
  .ui-dialog-content {
    padding: 0;
    overflow: inherit;
  }
}

.yuv-dialog {
  @include flex-col();
  max-height: 100%;
  max-width: 100%;
  animation: none;
  &-close {
    position: absolute;
    right: 5px;
    top: 5px;
    z-index: 2;
  }
  &-header {
    background-color: var(--color-accent);
    color: var(--color-white);
    padding: var(--app-pane-padding) calc(var(--app-pane-padding) * 2.5) calc(var(--app-pane-padding) * 2) var(--app-pane-padding);
    font-weight: var(--font-weight-light);
    font-size: var(--font-headline);
    flex: 0 0 auto;
    .headline {
      font-size: 24px;
      margin: 0;
      font-weight: normal;
      margin-right: 25px;
    }
    .subtitle {
      font-size: 15px;
      margin: 0;
      font-weight: normal;
    }
  }
  &-content {
    position: relative;
    @include flex-col();
    overflow: auto;
    height: 100%;
    max-height: 500px;
    // &.add--content {
    //   max-height: 620px;
    // }
    // &>eo-tree {
    //   margin: var(--app-pane-padding);
    // }
    // .empty {
    //   padding: var(--app-pane-padding);
    //   color: var(--text-color-caption);
    //   @include flex-col();
    //   align-items: center;
    //   justify-content: center;
    // }
    // &.process-form-dialog--content {
    //   overflow: auto;
    //   max-height: 100%;
    // }
    // &.date-picker--content {
    //   overflow: auto;
    // }
  }
}
.yuv-quick-search {
  position: relative;
  border-radius: 2px;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.2);

  .count {
    background-color: var(--color-primary);
    color: #fff;
    animation: yuvFadeInUp 200ms;
    position: absolute;
    right: calc(var(--app-pane-padding) / 2);
    padding: calc(var(--app-pane-padding) / 4) calc(var(--app-pane-padding) / 2);
    font-size: var(--font-subhead);
    border-radius: 2px;
    top: calc(var(--app-pane-padding) * -1);

    &.no-results:hover {
      background-color: var(--color-accent);
      cursor: pointer;
    }
  }

  .search-box {
    display: flex;
    flex: 0 0 auto;
    flex-flow: row nowrap;
    border-radius: 2px;
    padding: calc(var(--app-pane-padding) / 4);
    align-items: center;
    background: rgba(255, 255, 255, 0.9);

    &.agg {
      border-radius: 2px 2px 0 0;
    }

    &.invalid {
      .input input {
        color: var(--color-error);
      }
    }

    yuv-icon {
      flex: 0 0 auto;
      width: 40px;
      height: 40px;
      opacity: 0.2;
      margin: 0 var(--app-pane-padding);
    }

    .input {
      flex: 1 1 auto;
      display: flex;
      flex-flow: column;
      align-items: stretch;

      label {
        color: var(--text-color-body);
        opacity: 0.5;
      }

      input {
        border: 0;
        font-size: var(--font-display);
        background: transparent;
        margin: 4px 0;
        width: 100%;
        color: var(--text-color-body);
      }
    }
  }

  // aggregations panel
  .aggregations {
    display: flex;
    padding: 1px;
    flex-flow: row wrap;
    background-color: var(--panel-background-grey);
    border-top: 1px solid rgba(0, 0, 0, 0.04);
    border-radius: 0 0 2px 2px;

    .type {
      padding: 0 2px;
      border: 1px solid rgba(0, 0, 0, 0.1);
      margin: 1px;
      background-color: #fff;
      display: flex;
      align-items: center;
      border-radius: 2px;
      cursor: pointer;
      padding: calc(var(--app-pane-padding) / 4) calc(var(--app-pane-padding) / 2) calc(var(--app-pane-padding) / 4) 0;

      &:hover {
        border-color: rgba(0, 0, 0, 0.2);
      }

      .label {
        order: 0;
        padding: 0 calc(var(--app-pane-padding) / 2);
      }

      .typecount {
        order: 1;
        display: inline-block;
        font-size: var(--font-hint);
        color: var(--text-color-hint);
      }
    }
  }
}
.yuv-panel-wrapper {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 110px 1fr;
  grid-template-areas: 'header' 'content';
  height: 100%;
  overflow: hidden;
}

.content {
  grid-area: content;
  position: relative;
  height: 100%;
}

.header {
  display: grid;
  grid-template-columns: 57px 3fr 0.5fr;
  grid-template-rows: 1fr;
  grid-template-areas: 'icon header_text extras';
  grid-area: header;
  padding: var(--app-pane-padding);
  padding-bottom: 0;

  :host-context(.screen-s) & {
    grid-template-columns: 40px 3fr 1fr;
  }
}

.icon {
  grid-area: icon;

  svg {
    fill: var(--text-color-caption);
  }
}

.header_text {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(auto-fit, 30px);
  grid-template-areas: 'title' 'description';
  grid-area: header_text;

  :host-context(.screen-s) & {
    grid-template-rows: repeat(auto-fit, 45px);
  }
}

.header_title {
  grid-area: title;
  font-weight: var(--font-weight-normal);
  font-size: var(--font-title);
  color: var(--text-color-caption);
}

.header_description {
  grid-area: description;
  max-width: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: var(--font-subhead);
  color: var(--text-color-caption);
  font-weight: var(--font-weight-normal);
  line-height: 2em;
  height: 2em;
  margin: 0;
}

.extras {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(auto-fit, var(--font-display));
  grid-template-areas: 'actions' 'status';
  grid-area: extras;
  justify-self: end;

  :host-context(.screen-s) & {
    grid-template-rows: 1fr;
    grid-template-columns: repeat(auto-fit, var(--font-display));
    grid-template-areas: 'actions status';
  }
}

.actions {
  grid-area: actions;
  justify-self: end;
  :host-context(.screen-s) & {
    justify-self: start;
  }
}

.status {
  grid-area: status;
}
$yuv-panel-toolbar-width: 57px;
$yuv-panel-header-height: 110px;

.yuv-search-result {
  height: 100%;
  position: relative;
  yuv-panel {
    padding: 0;
  }
}

.busy-indicator {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: center;
  background-color: antiquewhite;
  &.ng-animating {
    height: 100%;
  }
}

.grid-container {
  display: grid;
  grid-template-columns: 57px 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: 'tollbar table';
  height: 100%;
  border-top: 1px solid var(--panel-divider-color);
}

.tollbar {
  grid-area: tollbar;
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: flex-start;
  background-color: var(--panel-background-grey);
  border-right: 1px solid var(--panel-divider-color);

  yuv-icon {
    width: 100%;
    height: auto;
    padding: var(--app-pane-padding);
    box-sizing: border-box;
    color: var(--text-color-caption);
    cursor: pointer;
    transition: all 200ms;

    &:hover {
      background-color: var(--panel-divider-color);
    }
  }
}

.table {
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: 1fr auto;
  grid-template-areas: 'data-table' 'footer';
  grid-area: table;
}

.footer {
  grid-area: footer;
  display: flex;
  align-items: center;
  border-top: 1px solid var(--panel-divider-color);
  padding: calc(var(--app-pane-padding) / 4) 0;

  min-height: 28px;
  color: var(--text-color-caption);

  .status {
    flex: 1;
    min-height: 24px;
    padding: 0 var(--app-pane-padding);
  }

  .controls {
    padding: 0 var(--app-pane-padding);
    display: flex;
    align-items: center;

    button {
      padding: 0;
      .first,
      .prev {
        transform: rotate(180deg);
      }
    }

    form {
      display: flex;
      border: 1px solid rgba(0, 0, 0, 0.2);
      margin: 0 4px;

      > div {
        padding: 4px;
        font-size: var(--font-caption);
        background-color: var(--panel-background-grey);
        user-select: none;
      }
      input {
        width: 3em;
        padding: 4px;
        line-height: 1em;
        text-align: right;
        border: 0;
        font-size: var(--font-caption);
        border-right: 1px solid rgba(0, 0, 0, 0.2);

        &.ng-invalid {
          color: var(--color-error);
        }
      }
    }
  }
}

.data-table {
  grid-area: data-table;
}

// .yuv-search-result {
//   height: 100%;
//   position: relative;

//   .busy-indicator {
//     position: absolute;
//     left: 0;
//     top: 0;
//     right: 0;
//     bottom: 0;
//     z-index: 1;
//     display: flex;
//     flex-flow: column;
//     align-items: center;
//     justify-content: center;
//     background-color: antiquewhite;
//     &.ng-animating {
//       height: 100%;
//     }
//   }

//   .yuv-panel-content {
//     height: 100%;
//     display: grid;
//     grid-template-columns: 1fr;
//     grid-template-rows: 1fr auto;
//     grid-template-areas: 'table' 'paging';
//   }

//   yuv-responsive-data-table {
//     grid-area: table;
//   }

//   .paging {
//     display: flex;
//     align-items: center;
//     border-top: 1px solid var(--panel-divider-color);
//     padding: calc(var(--app-pane-padding) / 4) 0;
//     grid-area: paging;
//     min-height: 28px;
//     color: var(--text-color-caption);

//     .status {
//       flex: 1;
//       min-height: 24px;
//       padding: 0 var(--app-pane-padding);
//     }

//     .controls {
//       padding: 0 var(--app-pane-padding);
//       display: flex;
//       align-items: center;

//       button {
//         padding: 0;
//         .first,
//         .prev {
//           transform: rotate(180deg);
//         }
//       }

//       form {
//         display: flex;
//         border: 1px solid rgba(0, 0, 0, 0.2);
//         margin: 0 4px;

//         > div {
//           padding: 4px;
//           font-size: var(--font-caption);
//           background-color: var(--panel-background-grey);
//           user-select: none;
//         }
//         input {
//           width: 3em;
//           padding: 4px;
//           line-height: 1em;
//           text-align: right;
//           border: 0;
//           font-size: var(--font-caption);
//           border-right: 1px solid rgba(0, 0, 0, 0.2);

//           &.ng-invalid {
//             color: var(--color-error);
//           }
//         }
//       }
//     }
//   }
// }

// .yuv-panel-content {
//   display: grid;
//   grid-template-columns: 1fr;
//   grid-template-rows: 1.9fr 0.1fr;
//   grid-template-areas: 'table' 'footer';
// }

// .footer {
//   grid-area: footer;
// }

// .table {
//   display: grid;
//   grid-template-columns: 0.1fr 2.1fr;
//   grid-template-rows: 1fr;
//   grid-template-areas: 'tollbar data-table';
//   grid-area: table;
// }

// .tollbar {
//   grid-area: tollbar;
//   display: grid;
//   grid-template-columns: $yuv-panel-toolbar-width 1fr;
//   grid-template-rows: $yuv-panel-header-height 1fr;
//   grid-template-areas: 'ico title' 'toolbar content';
// }

// .data-table {
//   grid-area: data-table;
// }
.as-horizontal.state {
  :host-context(.screen-s) & {
    padding: 0;
  }
}
.yuv-responsive-master-slave {
  &.state {
    .as-horizontal.state {
      padding: var(--app-pane-padding);
      box-sizing: border-box;
    }
  }

  .yuv-master,
  .yuv-slave {
    height: 100%;
  }
}
.yuv-user-avatar {
    display: block;
    height: 100%;
    box-sizing: border-box;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center;
}

.yuv-form-input {
  .fe-wrapper {
    display: flex;
    @include transition();
    flex-flow: row nowrap;
    align-items: center;
    padding: calc(var(--app-pane-padding) / 4) 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.15);

    &.focusWithin {
      border-color: var(--color-accent);
      > label {
        color: var(--color-accent);
      }
    }

    > div.control {
      flex: 1 1 auto;
      padding: 0 calc(var(--app-pane-padding) / 4);
      order: 1;

      > span {
        display: inline-block;
        border-radius: 2px;
        font-size: var(--font-hint);
        background-color: var(--color-accent);
        padding: 0 calc(var(--app-pane-padding) / 4);
        color: var(--color-white);
      }
    }
    > .form-input__label {
      text-align: end;
      @include transition();
      user-select: none;
      order: 2;
      flex: 0 1 auto;
      padding: 2px calc(var(--app-pane-padding) / 4);
      margin-right: 3px;
      color: var(--text-color-caption);
      border-radius: 2px;
      font-size: var(--font-caption);
    }
    > .tag {
      order: 3;
      flex: 0 0 auto;
      border-radius: 2px;
      background-color: var(--color-primary-2);
      font-size: var(--font-hint);
      display: inline-block;
      line-height: 1em;
      padding: 2px;
      cursor: default;
      color: #fff;
    }
  }

  &.checkbox .fe-wrapper > label {
    text-align: start;
  }

  .description {
    font-size: var(--font-hint);
    font-style: italic;
    padding: calc(var(--app-pane-padding) / 8) calc(var(--app-pane-padding) / 8) 0 calc(var(--app-pane-padding) / 8);
    color: var(--text-color-caption);
  }

  &.required .fe-wrapper {
    > label {
      background-color: rgba(0, 0, 0, 0.06);

      &:after {
        content: '*';
        padding: 0 4px;
        font-weight: bold;
      }
    }
  }

  &.invalid .fe-wrapper {
    background: rgba(var(--color-error), 0.15);
    border-color: var(--color-error);
    > label {
      background-color: var(--color-error);
      color: var(--color-white);
      margin: 0 4px;
      &:after {
        content: '!';
        margin-left: calc(var(--app-pane-padding) / 2);
      }
    }
  }
  &.disabled {
    opacity: 0.5;
  }

  &.checkbox {
    .fe-wrapper {
      border-color: transparent !important;
      > div.control {
        flex: 0 0 auto;
      }
      > label {
        flex: 0 1 auto;
      }
    }
  }
}

// styles for dark forms
.dark .yuv-form-input {
  .fe-wrapper {
    border-color: rgba(255, 255, 255, 0.54);
    > label {
      color: rgba(255, 255, 255, 0.84);
    }
    &.focusWithin {
      border-color: #fff;
      > label {
        color: #fff;
      }
    }
  }
  .ui-dropdown.range {
    background-color: rgba(255, 255, 255, 0.1);
  }
}

// for form elements inside of form elements (e.g. range elements)
.yuv-form-input .fe-wrapper {
  .fe-wrapper {
    background: transparent;
    padding: 0;
  }
}

// general styles of contained controls
//noinspection CssInvalidPseudoSelector
.yuv-form-input {
  input,
  .ui-inputtext {
    padding: 0;
    border: 0 !important;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    width: 100%;
  }
  input {
    background-color: transparent;
  }
  button.ui-button {
    background: rgba(0, 0, 0, 0.08);
    border: 0;
    border-radius: 2px;
    color: var(--text-color-caption);
    cursor: pointer;
    width: 20px;
    height: 20px;

    &:enabled:active,
    &:enabled:focus {
      border: 0;
      background: var(--color-accent);
      color: var(--color-white);
    }
    &.ui-spinner-button:enabled:hover,
    &:enabled:active,
    &:enabled:hover {
      border: 0;
      background: var(--color-accent);
      color: var(--color-white);
    }
    .fa {
      color: currentColor !important;
    }

    yuv-icon {
      width: 16px;
      height: 16px;
      margin: auto;
    }
  }

  // range selection dropdown button
  .ui-dropdown.range {
    width: 20px !important;
    margin: 0 4px;
    background: rgba(0, 0, 0, 0.1);
    border: 0;
    border-radius: 2px;
    @include transition();

    &.ui-state-focus {
      background: var(--color-accent) !important;
      label {
        color: var(--color-primary-4);
      }
    }

    &:not(.ui-state-disabled):hover {
      background: rgba(0, 0, 0, 0.2);
    }

    .ui-dropdown-panel .ui-dropdown-items .ui-dropdown-item {
      padding: calc(var(--app-pane-padding) / 4) calc(var(--app-pane-padding) / 2);
    }

    .ui-dropdown-trigger {
      display: none;
    }
    .ui-dropdown-item,
    label {
      text-align: center;
      font-family: monospace;
      display: block;
    }
    label:after {
      display: none;
    }
  }
}
.yuv-checkbox {
  display: flex;
  align-items: center;

  .tristate {
    display: flex;
    align-items: center;
  }

  eo-icon {
    height: 16px;
    width: 16px;
    color: var(--text-color-hint);
    cursor: pointer;
    margin: 1px 0 0 4px;
  }
}


.dark .yuv-checkbox {
  eo-icon {
    color: rgba(var(--color-white-rgb), 0.8);
  }
}
.actions,
.status,
.header-icon {
  color: var(--text-color-caption);
}

.finalized-icon {
  color: var(--color-success);
}

.object-details.yuv-panel-wrapper {
  ::ng-deep {
    .header {
      :host-context(.screen-s) & {
        grid-template-areas: 'header_text extras';
        grid-template-columns: 5fr 1fr;
      }
    }
    .icon {
      :host-context(.screen-s) & {
        display: none;
      }
    }
  }
}
:host {
  .yuv-datepicker {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
  }
}
//noinspection CssInvalidPseudoSelector
:host ::ng-deep {
  p-inputmask {
    flex: 1 1 auto;
    input {
      width: 100%;
      border: 0;
      background: transparent;
    }
  }
}
.action-bar {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(24px, 1fr));
  grid-gap: 20px 5px;
  grid-auto-flow: column dense;

  :host-context(.screen-s) & {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(auto-fit, minmax(24px, 1fr));
    grid-gap: 0;
    grid-auto-flow: row;
  }
}
$icon-size: 18px !default;
$primary-color: var(--color-accent);
$range-selection-highlight-color: $primary-color;

.yuv-responsive-data-table {
  height: 100%;
  //   display: grid;
  //   grid-template-columns: 1fr;
  //   grid-template-rows: 1fr;
  //   grid-template-areas: "table";

  .table {
    grid-area: table;
  }
}
// .timeline-entry {
//   .marker {
//     &.bpm::before {
//       border-color: var(--color-warning);
//     }
//     &.mod::before {
//       border-color: var(--color-success);
//     }
//   }
//   .what {
//     padding-bottom: 0;

//     .title {
//       display: flex;
//       flex-flow: row nowrap;
//       justify-content: space-between;

//       .version {
//         font-weight: var(--font-weight-normal);
//         font-size: var(--font-hint);
//         white-space: nowrap;
//         span {
//           padding: 0 calc(var(--app-pane-padding) / 4);
//         }
//         color: var(--text-color-caption);
//       }
//     }

//     .comment {
//       display: none;
//     }

//     .bpm-meta {
//       font-size: var(--font-hint);
//       color: var(--text-color-caption);
//       margin-bottom: calc(var(--app-pane-padding) / 2);
//     }

//     .meta {
//       display: flex;
//       flex-flow: row wrap;
//       margin-bottom: calc(var(--app-pane-padding) / 4);

//       > span {
//         display: block;
//         border-radius: 2px;
//         padding: 2px 4px;
//         font-size: var(--font-caption);
//         background-color: rgba(var(--color-black-rgb), 0.08);
//         margin: 0 calc(var(--app-pane-padding) / 4)
//           calc(var(--app-pane-padding) / 4) 0;
//       }
//     }
//   }

//   &.comment {
//     .what {
//       .comment {
//         display: block;
//         font-style: italic;
//         color: var(--text-color-caption);
//         margin-bottom: calc(var(--app-pane-padding) / 2);
//       }
//     }
//   }
// }

.timeline-entry {
  display: grid;
  grid-template-columns: auto auto 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: 'when marker what';

  &:first-child .marker:after {
    height: 50%;
    top: auto;
  }

  &:last-child .marker:after {
    height: 50%;
    bottom: auto;
  }

  &:only-child .marker:after {
    height: 0;
  }

  .when {
    grid-area: when;
    align-self: center;
  }

  .marker {
    grid-area: marker;

    width: calc(var(--app-pane-padding) * 2);
    position: relative;
    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: center;
    flex: 0 0 auto;
    margin: 0 var(--app-pane-padding);

    &:before {
      content: '';
      width: var(--app-pane-padding);
      height: var(--app-pane-padding);
      border-radius: 50%;
      background-color: var(--panel-background);
      border: 2px solid var(--text-color-hint);
      z-index: 1;
    }

    &:after {
      content: '';
      position: absolute;
      width: calc(var(--app-pane-padding) - 1px);
      left: 0;
      top: 0;
      bottom: 0;
      border-right: 2px solid rgba(var(--color-accent-rgb), 0.26);
    }

    &.bpm:before {
      border-color: var(--color-warning);
    }
    &.mod:before {
      border-color: var(--color-success);
    }
  }

  .what {
    grid-area: what;
    background-color: var(--accent-color);
    border-radius: 2px;
    padding: calc(var(--app-pane-padding) / 2);
    margin: calc(var(--app-pane-padding) / 2) calc(var(--app-pane-padding) / 2) 0 0;
  }
}
.history-filter {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(1fr, auto));
  // grid-template-columns: repeat(auto-fit, 1fr);
  grid-auto-flow: column;
  grid-template-rows: 1fr;
  grid-template-areas: 'search filter';
  align-items: center;
}

.search {
  display: grid;
  grid-template-columns: 36px 2fr 36px;
  grid-template-rows: 1fr;
  grid-template-areas: 'filter_icon filter_input clear_icon';
  grid-area: search;
}

.filter_icon {
  grid-area: filter_icon;
}

.filter_input {
  grid-area: filter_input;
}

.clear_icon {
  grid-area: clear_icon;
}

.filter {
  display: grid;
  grid-template-columns: fit-content(200px);
  // grid-template-rows: 1fr;
  grid-template-areas: 'modification process informational';
  grid-area: filter;
  justify-self: end;

  .selection-filter {
    min-height: 0;
    min-width: 0;
    cursor: pointer;
    padding: 0 calc(var(--app-pane-padding) / 2);

    &.inactive {
      opacity: 0.4;
    }

    &:before {
      content: '';
      flex: 0 0 auto;
      display: block;
      margin: 0 calc(var(--app-pane-padding) / 4);
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: var(--color-white);
      border: 2px solid var(--text-color-hint);
      z-index: 1;
    }
    &.modification {
      grid-area: modification;
      display: flex;

      &:before {
        border-color: var(--color-favorite);
      }
    }

    &.process {
      grid-area: process;
      display: flex;

      &:before {
        border-color: var(--color-error);
      }
    }

    &.informational {
      grid-area: informational;
      display: flex;

      &:before {
        border-color: var(--color-success);
      }
    }
  }
}
.yuv-string {

  font-family: 'Roboto';
  display: flex;
  flex-flow: row nowrap;
  align-items: center;

  p-autocomplete {
    width: 100%;
  }

  .classify {

    a {
      color: var(--text-color-hint);

      &:hover, &:focus {
        color: var(--text-color-caption);
      }
    }

    &.empty {
      display: none;
    }
  }

  .input-textarea {
    resize: vertical;
    &.size-small {
      height: 4em;
    }
    &.size-medium {
      height: 6em;
    }
    &.size-large {
      height: 8em;
    }
  }

  .ui-inputtext, input {
    padding: 0;
    border: 0!important;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    width: 100%;
  }
}

// //noinspection CssInvalidPseudoSelector
// :host ::ng-deep {
//   input {
//     width: 100%;
//   }
// }
:host {
  as-split {
    padding: 0;
  }

  p-tabview {
    position: relative;
    display: block;
    height: 100%;
    overflow: hidden;

    .tab-navigation {
      position: absolute;
      top: 1px;
      right: 1px;
      display: flex;
      height: 35px;
      background: #f4f4f4;
      border-top-left-radius: 3px;
      border-top-right-radius: 3px;
      border: 1px solid #c8c8c8;
    }
  }
}

::ng-deep {
  .ui-tabview {
    padding: 0;
    height: 100%;
  }

  .ui-tabview-close:after {
    content: '\0000D7';
  }

  li.ui-state-disabled {
    display: none;
  }

  li.ui-state-active {
    border: 1px solid var(--color-accent) !important;
    background: var(--color-accent) !important;
  }

  .ui-tabview-nav {
    overflow: auto hidden;
    display: flex;
    margin-right: 34px;
  }
  :host-context(.screen-s) .ui-tabview.ui-tabview-bottom .ui-tabview-nav {
    margin-top: -35px;
  }

  .ui-tabview-nav::-webkit-scrollbar {
    height: 0;
  }

  .ui-tabview-panels {
    height: 100%;
    overflow: auto;
    border: none;
    border-top: 1px solid #c8c8c8;
    .ui-tabview-panel {
      height: 500px;

      :host-context(.screen-s) & {
        height: 200px;
      }
    }
    :host-context(.screen-s) & {
      position: absolute;
    }
  }

  .split-tab-view .ui-tabview-panel {
    .ui-tabview {
      padding: 0;
      height: 100%;
    }

    &:first-child {
      display: none !important;
    }

    &.ui-helper-hidden {
      display: block !important;
    }
  }
}
// .eo-head.eo-head-tabs {
//   height: calc(var(--app-pane-header-height) - 30px);
//   background-color: white;
// }

// .header {
//   display: grid;
//   grid-template-columns: 5% 75% 20%;
//   grid-template-rows: 1fr;
//   grid-template-areas: 'header-icon header-info header-actions';

//   position: relative;
//   height: var(--app-pane-header-height);
//   box-sizing: border-box;
//   padding: var(--app-pane-padding);
//   padding-bottom: 0;
//   min-height: 0;
//   min-width: 0;
// }

// ::ng-deep {
//   .sidebar-header.hide {
//     background: none;
//   }
// }

// .header-icon {
//   grid-area: header-icon;
// }

// .header-actions {
//   grid-area: header-actions;
//   justify-self: end;
// }

// .header-info {
//   display: grid;
//   grid-template-columns: 1fr;
//   grid-template-rows: repeat(auto-fit, 30px);
//   grid-template-areas: 'header-title' 'header-description';
//   grid-area: header-info;
//   grid-gap: 5px;
//   min-height: 0;
//   min-width: 0;
//   padding-right: var(--app-pane-padding);
//   padding-left: var(--app-pane-padding);
//   user-select: none;
// }

// .header-title {
//   grid-area: header-title;
//   display: inline-block;
//   max-width: none;
//   overflow: hidden;
//   text-overflow: ellipsis;
//   white-space: nowrap;
//   padding: calc(var(--app-pane-padding) / 4) 0;
//   font-size: var(--font-title);
//   font-weight: 400;
//   line-height: 1.1em;
//   margin: 0;
// }

// .header-description {
//   grid-area: header-description;
//   display: inline-block;
//   max-width: none;
//   overflow: hidden;
//   text-overflow: ellipsis;
//   white-space: nowrap;
//   font-size: var(--font-subhead);
//   font-weight: 400;
//   line-height: 2em;
//   height: 2em;
//   margin: 0;
// }
.object-summary {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: 'summary';
  grid-gap: calc(var(--app-pane-padding) / 2);

  .entry.core-entry:last-of-type {
    margin-bottom: 100px !important;
  }

  .entry {
    grid-area: summary;
    display: grid;
    grid-template-columns: 40% 60%;
    grid-template-rows: 100%;
    grid-template-areas: 'label value';
    grid-gap: 12px;
    margin-bottom: 2px;

    .label {
      grid-area: label;
      background-color: var(--color-primary-3);
      color: white;
      padding: calc(var(--app-pane-padding) / 4);
      border-radius: 2px;
      display: inline-block;
      max-width: none;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: normal;

      .inverted & {
        background-color: var(--panel-background);
        color: black;
      }

      :host-context(.screen-s) & {
        grid-template-columns: 1fr 1fr;
      }
    }

    .value {
      grid-area: value;
      align-self: center;

      :host-context(.screen-s) & {
        width: 95%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }

    &.baseparams .label {
      color: var(--color-black);
      background-color: var(--panel-background-grey);
    }
  }
  .extra-entry {
    margin-bottom: 40px;
  }
}
