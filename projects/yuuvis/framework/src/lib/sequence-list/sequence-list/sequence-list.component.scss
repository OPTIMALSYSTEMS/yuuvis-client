:host {
  display: block;
  border: 1px solid var(--panel-divider-color);
  padding: 1px;
  background-color: var(--panel-background);
  &:focus {
    border-color: var(--color-accent);
  }

  &.dense {
    form.entryForm {
      display: flex;
      flex-flow: column;
    }
  }

  form.entryForm {
    display: grid;
    grid-template-rows: auto auto auto auto;
    grid-template-columns: 1fr;
    padding: calc(var(--app-pane-padding) / 2);
    gap: calc(var(--app-pane-padding) / 2);
    grid-template-areas: 'title' 'task' 'nextAssignee' 'expiryDatetime' 'buttons';
    border: 1px solid var(--panel-divider-color);

    h2 {
      grid-area: title;
      margin: 0;
      text-align: end;
    }
    yuv-form-input {
      &.task {
        grid-area: task;
      }
      &.nextAssignee {
        grid-area: nextAssignee;
      }
      &.expiryDatetime {
        grid-area: expiryDatetime;
      }
    }
    .buttons {
      grid-area: buttons;
      display: flex;
      justify-content: end;
      margin: 0 -2px;
      button {
        margin: 0 2px;
      }
    }
  }

  .toolbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: calc(var(--app-pane-padding) / 4);
    border: 1px solid var(--panel-divider-color);

    &:focus {
      border-color: var(--color-accent);
    }

    h2 {
      padding: 0;
      margin: 0 calc(var(--app-pane-padding) * 0.75);
      flex: 1;
    }

    button {
      padding: calc(var(--app-pane-padding) / 4);
      border-radius: 2px;

      &.btn-templates {
        margin: 0 4px;
      }
    }
  }

  .entries {
    .entry {
      position: relative;
      transition: background-color 100ms ease-in-out;
      border: 1px solid var(--panel-divider-color);
      display: grid;
      padding: calc(var(--app-pane-padding) * 0.75);
      column-gap: calc(var(--app-pane-padding) / 2);
      row-gap: calc(var(--app-pane-padding) / 4);
      grid-template-rows: auto auto;
      grid-template-columns: auto auto 1fr auto;
      grid-template-areas:
        'handle index content action'
        'handle index content action';
      margin-top: 1px;

      &.disabled {
        background-color: var(--panel-background-lightgrey);
        opacity: 0.85;
        &.current {
          background-color: var(--panel-background);
          border-color: var(--color-accent);
        }

        .innerAdd:not(.active) {
          opacity: 0;
        }
        button,
        .handle {
          pointer-events: none;
          cursor: default;
          opacity: 0.5;
        }
      }

      &.single {
        .handle,
        .index {
          display: none;
        }
      }

      .innerAdd {
        position: absolute;
        top: -12px;
        left: calc(50% - 12px);
        border-radius: 2px;
        color: var(--text-color-caption);
        cursor: pointer;
        background-color: var(--panel-background);
        border: 1px solid var(--panel-divider-color);
        width: 20px;
        height: 20px;

        &.active {
          background-color: var(--color-accent);
          border-color: var(--color-accent);
          color: #fff;
        }
      }

      .index {
        grid-area: index;
        display: flex;
        flex-flow: column;
        align-items: center;
        justify-content: center;
        color: var(--color-accent);
        padding: 0 calc(var(--app-pane-padding) / 4);
      }
      .handle {
        grid-area: handle;
        color: var(--text-color-caption);
        align-self: center;
        cursor: n-resize;
      }
      .content {
        grid-area: content;

        ::ng-deep {
          .list-entry .task {
            word-break: break-all;
          }
        }
      }

      .action {
        grid-area: action;
        display: flex;
        align-items: center;

        button {
          padding: 2px;

          yuv-icon {
            width: 18px;
            height: 18px;
          }
        }
      }
    }
  }
}
