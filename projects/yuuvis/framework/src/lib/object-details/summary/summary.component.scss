@import './../../../../../../../src/scss-shared/_mixins';

.object-summary {
  ::ng-deep {
    .ui-accordion {
      p-accordiontab {
        display: block;
        box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1);
        margin-bottom: var(--app-pane-padding);
      }

      .ui-accordion-header {
        margin: 0;

        a {
          border: 0 !important;
          background: rgba(0, 0, 0, 0.06);
          color: var(--text-color-caption) !important;
          display: flex;
          flex-flow: row-reverse;
          outline: 0 !important;
          padding: calc(var(--app-pane-padding) / 2);

          .ui-accordion-header-text {
            flex: 1;
          }
          .ui-accordion-toggle-icon {
            color: var(--text-color-caption) !important;
          }
        }

        &:not(.ui-state-disabled).ui-state-active a {
          background-color: var(--panel-background);
          color: var(--text-color-caption);
        }
      }
      .ui-accordion-content-wrapper {
        .ui-accordion-content {
          border: 0;
          color: var(--text-color-caption);
          background-color: var(--panel-background);
        }
      }
    }
  }

  .entry {
    grid-area: summary;
    display: grid;
    grid-template-columns: minmax(20%, 40%) minmax(50%, 80%);
    grid-template-rows: 100%;
    grid-template-areas: 'label value';
    padding: calc(var(--app-pane-padding) / 4);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    @include transition();

    &:hover {
      background-color: rgba(0, 0, 0, 0.03);
      background: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.03) 10%, rgba(0, 0, 0, 0.03) 90%, rgba(0, 0, 0, 0) 100%);
    }

    &:last-child {
      border: 0;
    }

    .label {
      grid-area: label;
      padding: calc(var(--app-pane-padding) / 4);
      display: inline-block;
      max-width: none;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: normal;
      color: var(--text-color-caption);

      :host-context(.screen-s) & {
        padding-left: 0;
      }
    }

    .value {
      grid-area: value;
      align-self: center;
      @include ellipsis();

      svg {
        fill: var(--text-color-caption);
      }
    }

    :host-context(.screen-s) & {
      grid-template-columns: auto;
      grid-template-rows: auto;
      grid-template-areas: 'label' 'value';
    }
  }
}
